{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","good","setState","removeGood","filter","el","clearAll","showSelectedRow","selected","length","last","pop","join","this","className","type","onClick","map","isSelected","some","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,WAAa,SAACC,GAAD,OAAkB,EAAKC,UAClC,SAACJ,GAAD,MAAY,CACVC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,SAP9C,EAWEE,WAAa,SAACF,GAAD,OAAkB,EAAKC,UAClC,SAACJ,GAAD,MAAY,CACVC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,UAb7D,EAiBEK,SAAW,kBAAM,EAAKJ,SAAS,CAC7BH,cAAe,MAlBnB,EAqBEQ,gBAAkB,SAACR,GACjB,IAAMS,EAAQ,YAAOT,GAErB,OAAQS,EAASC,QACf,KAAK,EACH,MAAO,qBAET,KAAK,EACH,MAAM,IAAN,OAAWD,EAAS,GAApB,iBAEF,QAEE,IAAME,EAAOF,EAASG,MAEtB,MAAM,IAAN,OAAWH,EAASI,KAAK,MAAzB,gBAAsCF,EAAtC,mBAnCR,4CAwCE,WAAU,IAAD,OACCX,EAAkBc,KAAKf,MAAvBC,cAER,OACE,sBAAKe,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,0BAGGf,EAAcU,OAAS,GAAK,IAH/B,IAKGI,KAAKN,gBAAgBR,GACtB,wBACEgB,KAAK,SACLD,UAAS,iBACNf,EAAcU,OAEX,cADA,eAGNO,QACE,kBAAM,EAAKV,YARf,kBAcF,oBAAIQ,UAAU,OAAd,SAEIlB,EAAgBqB,KAAI,SAAChB,GACnB,IAAMiB,EAAanB,EAAcoB,MAAK,SAAAd,GAAE,OAAIA,IAAOJ,KAEnD,OACE,qBAEEa,UAAS,qBAAgBI,EAAa,oBAAsB,IAF9D,UAIGjB,EAECiB,EAEI,wBACEH,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAM,EAAKb,WAAWF,IAHjC,oBASA,wBACEc,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKhB,WAAWC,IAHjC,mBAhBDA,eAxEvB,GAAyBmB,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc9bc2e9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (good: string) => this.setState(\n    (state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }),\n  );\n\n  removeGood = (good: string) => this.setState(\n    (state) => ({\n      selectedGoods: state.selectedGoods.filter(el => el !== good),\n    }),\n  );\n\n  clearAll = () => this.setState({\n    selectedGoods: [],\n  });\n\n  showSelectedRow = (selectedGoods: string[]) => {\n    const selected = [...selectedGoods];\n\n    switch (selected.length) {\n      case 0:\n        return ' No goods selected';\n\n      case 1:\n        return ` ${selected[0]} are selected`;\n\n      default:\n      {\n        const last = selected.pop();\n\n        return ` ${selected.join(', ')} and ${last} are selected`;\n      }\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n\n          Selected good\n          {selectedGoods.length > 1 && 's'}\n          :\n          {this.showSelectedRow(selectedGoods)}\n          <button\n            type=\"button\"\n            className={`button ${\n              !selectedGoods.length\n                ? 'button_hide'\n                : 'button_show'\n            }`}\n            onClick={\n              () => this.clearAll()\n            }\n          >\n            X\n          </button>\n        </h1>\n        <ul className=\"list\">\n          {\n            goodsFromServer.map((good) => {\n              const isSelected = selectedGoods.some(el => el === good);\n\n              return (\n                <li\n                  key={good}\n                  className={`list__item ${isSelected ? 'list__item_active' : ''}`}\n                >\n                  {good}\n                  {\n                    isSelected\n                      ? (\n                        <button\n                          type=\"button\"\n                          className=\"button button_color-red\"\n                          onClick={() => this.removeGood(good)}\n                        >\n                          Remove\n                        </button>\n                      )\n                      : (\n                        <button\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => this.selectGood(good)}\n                        >\n                          Add\n                        </button>\n                      )\n                  }\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}